{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text","className","placeholder","onChange","name","ref","onClick","Todo","todos","removeTodo","updateTodo","setEdit","map","todo","index","key","TodoList","setTodos","removedArr","filter","todoId","newValue","test","prev","item","newTodos","console","log","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24418e86.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nfunction TodoForm(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      text: input\r\n    });\r\n    setInput('');\r\n  };\r\n\r\n  return (\r\n    <div className='todo-add'>\r\n      <form onSubmit={handleSubmit} className='todo-form'>\r\n        {props.edit ? (\r\n          <>\r\n            <input\r\n              placeholder='Edit'\r\n              value={input}\r\n              onChange={handleChange}\r\n              name='text'\r\n              ref={inputRef}\r\n              className='todo-input edit'\r\n            />\r\n            <button onClick={handleSubmit} className='todo-button edit'>\r\n              Update\r\n          </button>\r\n          </>\r\n        ) : (\r\n            <>\r\n              <input\r\n                placeholder='Add a standard name'\r\n                value={input}\r\n                onChange={handleChange}\r\n                name='text'\r\n                className='todo-input'\r\n                ref={inputRef}\r\n              />\r\n              <div className='todo-div'  >\r\n                <button className='todo-button' onClick={handleSubmit} >\r\n                  Add standard\r\n          </button>\r\n              </div>\r\n            </>\r\n          )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","\r\nimport React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\n\r\nconst Todo = ({ todos, removeTodo, updateTodo }) => {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: ''\r\n  });\r\n  const submitUpdate = value => {\r\n    updateTodo(edit.id, value);\r\n    setEdit({\r\n      id: null,\r\n      value: ''\r\n    });\r\n  };\r\n\r\n  if (edit.id) {\r\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n  }\r\n\r\n  return todos.map((todo, index) => (\r\n    <div\r\n      className={'todo-row'}\r\n      key={index}\r\n    >\r\n      <div className='icons'>\r\n        <RiCloseCircleLine\r\n          onClick={() => removeTodo(todo.id)}\r\n          className='delete-icon'\r\n        />\r\n        <TiEdit\r\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n          className='edit-icon'\r\n        />\r\n\r\n        <i className=\"fa fa-arrow-left\" ></i>\r\n        <i className=\"fa fa-arrow-right\" ></i>\r\n      </div>\r\n      <div className='dash'>-</div>\r\n      <div className='todo-text' key={todo.id}>\r\n        {todo.text}\r\n      </div>\r\n\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default Todo;","import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport Todo from './Todo';\r\n\r\nfunction TodoList() {\r\n  const [todos, setTodos] = useState([]);\r\n  const addTodo = todo => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    }\r\n\r\n    const newTodos = [todo, ...todos];\r\n\r\n    setTodos(newTodos);\r\n    console.log(...todos);\r\n  };\r\n\r\n  const updateTodo = (todoId, newValue) => {\r\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n      return;\r\n    }\r\n\r\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n  };\r\n\r\n  const removeTodo = id => {\r\n    const removedArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n    setTodos(removedArr);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className='todo-app'>\r\n        <div className='head-info'>\r\n          <div className='head-title'>\r\n            <h3>Action</h3>\r\n            <p>Move, Indent,</p>\r\n            <p>Outdent, Delete</p>\r\n          </div>\r\n\r\n          <div className='head-title'>\r\n            <h3>Standard</h3>\r\n            <p>The text of the standard</p>\r\n          </div>\r\n\r\n        </div>\r\n        <Todo\r\n          todos={todos}\r\n          removeTodo={removeTodo}\r\n          updateTodo={updateTodo}\r\n        />\r\n      </div>\r\n      <TodoForm onSubmit={addTodo} />\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport './App.css';\r\nimport TodoList from './components/TodoList';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='cont'>\r\n      <h1 className='heading'>\r\n        MATHEMATICS\r\n      </h1>\r\n      <div >\r\n        <TodoList />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}